# Tim Pusateri
# Jon Richelsen
# CSE30332
# Final Project: PyGame + Twisted
# 3D_Pongbreaker
#
# FUTURE IMPROVEMENTS
# Have number of brick rows and columns be determined by brick position file

# colors
COLOR_WHITE = 255, 255, 255
COLOR_GRAY =  100, 100, 100
COLOR_BLACK = 0,   0,   0
COLOR_RED =   255, 0,   0
COLOR_GREEN = 0,   255, 0
COLOR_BLUE =  0,   0,   255

# screen
SCREEN_WIDTH = 800  # pixels
SCREEN_HEIGHT = 800 # pixels
SCREEN_CENTER_X = SCREEN_WIDTH / 2
SCREEN_CENTER_Y = SCREEN_HEIGHT / 2
SCREEN_FACTOR = 200
FRAMERATE = 60 # frames/second

# hallway
HALLWAY_DEPTH = 1600 # pixels
HALLWAY_COLOR = COLOR_BLACK
HALLWAY_EDGE_COLOR = COLOR_GREEN

# wall

WALL_WIDTH = SCREEN_WIDTH / 4
WALL_HEIGHT = SCREEN_HEIGHT / 4
WALL_TOP_LEFT = (SCREEN_WIDTH - WALL_WIDTH) / 2, (SCREEN_HEIGHT - WALL_HEIGHT) / 2
WALL_TOP_RIGHT = (SCREEN_WIDTH - WALL_WIDTH) / 2 + WALL_WIDTH, (SCREEN_HEIGHT - WALL_HEIGHT) / 2
WALL_BOTTOM_LEFT = (SCREEN_WIDTH - WALL_WIDTH) / 2, (SCREEN_HEIGHT - WALL_HEIGHT) / 2 + WALL_HEIGHT
WALL_BOTTOM_RIGHT = (SCREEN_WIDTH - WALL_WIDTH) / 2 + WALL_WIDTH, (SCREEN_HEIGHT - WALL_HEIGHT) / 2 + WALL_HEIGHT

WALL_OUTLINE_TR = (SCREEN_WIDTH - WALL_WIDTH) / 2 + WALL_WIDTH + 2, (SCREEN_HEIGHT - WALL_HEIGHT) / 2 - 2
WALL_OUTLINE_TL = (SCREEN_WIDTH - WALL_WIDTH) / 2 - 2, (SCREEN_HEIGHT - WALL_HEIGHT) / 2 - 2
WALL_OUTLINE_BL = (SCREEN_WIDTH - WALL_WIDTH) / 2 - 2, (SCREEN_HEIGHT - WALL_HEIGHT) / 2 + WALL_HEIGHT + 2
WALL_OUTLINE_BR = (SCREEN_WIDTH - WALL_WIDTH) / 2 + WALL_WIDTH + 2, (SCREEN_HEIGHT - WALL_HEIGHT) / 2 + WALL_HEIGHT + 2

# brick
N_BRICK_ROWS = 8
N_BRICK_COLUMNS = 8
BRICK_WIDTH = SCREEN_WIDTH / N_BRICK_COLUMNS # pixels
BRICK_HEIGHT = SCREEN_HEIGHT / N_BRICK_ROWS # pixels
BRICK_PLANE = HALLWAY_DEPTH / 2 # pixels
BRICK_COLORS = {
	'R': COLOR_RED,
	'B': COLOR_BLUE
}
BRICK_POS_FN = 'test_brick_pos.txt'

# paddle
PADDLE_SCALING = 10
PADDLE_WIDTH = SCREEN_WIDTH / PADDLE_SCALING # pixels
PADDLE_HEIGHT = SCREEN_HEIGHT / PADDLE_SCALING # pixels
PADDLE_BUFFER = HALLWAY_DEPTH / 50 # pixels
PADDLE_SPEED = 2 # pixels/frame
PADDLE_COLOR = COLOR_WHITE
PADDLE_ALPHA = 100

# ball
BALL_SCALING = 20
BALL_RADIUS = min(SCREEN_WIDTH, SCREEN_HEIGHT) / BALL_SCALING / 2
BALL_INIT_SPEED = 50 # pixels/second
BALL_COLOR = COLOR_WHITE
